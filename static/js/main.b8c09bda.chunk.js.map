{"version":3,"sources":["timelines/index.js","Nav.js","views/Imprints/index.js","views/Repos/index.js","App.js","serviceWorker.js","index.js"],"names":["play","pathname","node","appears","timeline","delay","Timeline","paused","texts","querySelectorAll","from","display","autoAlpha","staggerFrom","x","ease","Power1","easeOut","getHomeTimeline","content","querySelector","contentInner","easeIn","y","easeInOut","getDefaultTimeline","requestAnimationFrame","path","routes","to","label","Nav","links","map","_ref","react_default","a","createElement","react_router_dom","strict","exact","key","Imprints","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","catelog","className","Component","Repos","repos","getMyReposWS","e","preventDefault","_this2","navigator","onLine","axios","get","then","response","localStorage","setItem","JSON","stringify","data","setState","catch","error","console","log","parse","getItem","repo","id","name","description","_this3","renderRepos","App","src_Nav","react_router","render","location","TransitionGroup","component","Transition","appear","onEnter","onExit","exit","timeout","enter","startsWith","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","scope","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"2VA8BaA,EAAO,SAACC,EAAUC,EAAMC,GACnC,IACIC,EADEC,EAAQF,EAAU,EAAI,GAI1BC,EADe,MAAbH,EAfkB,SAACC,EAAMG,GAC7B,IAAMD,EAAW,IAAIE,IAAS,CAAEC,QAAQ,IAClCC,EAAQN,EAAKO,iBAAiB,YAMpC,OAJAL,EACGM,KAAKR,EAAM,EAAG,CAAES,QAAS,OAAQC,UAAW,EAAGP,UAC/CQ,YAAYL,EAAO,KAAO,CAAEI,UAAW,EAAGE,GAAI,GAAIC,KAAMC,IAAOC,SAAW,MAEtEb,EAQMc,CAAgBhB,EAAMG,GAjCV,SAACH,EAAMG,GAChC,IAAMD,EAAW,IAAIE,IAAS,CAAEC,QAAQ,IAExC,GAAIL,EAAM,CACR,IAAMiB,EAAUjB,EAAKkB,cAAc,YAC/BC,EAAenB,EAAKkB,cAAc,mBACtChB,EACCM,KAAKR,EAAM,GAAK,CAAES,QAAS,OAAQC,UAAW,EAAGP,QAAOU,KAAMC,IAAOM,SACrEZ,KAAKS,EAAS,IAAM,CAAEP,UAAW,EAAGW,EAAG,GAAIR,KAAMC,IAAOQ,YACxDd,KAAKW,EAAc,IAAM,CAAET,UAAW,EAAGP,MAAO,IAAMU,KAAMC,IAAOM,SAKtE,OAAOlB,EAqBMqB,CAAmBvB,EAAMG,GACpCqB,sBAAsB,WACpBtB,EAASJ,UCpCT2B,EAAO,gBAEPC,EAAS,CACb,CAAEC,GAAIF,EAAK,IAAKG,MAAO,SACvB,CAAED,GAAIF,EAAK,YAAaG,MAAO,aAWlBC,EARH,WACV,IAAMC,EAAQJ,EAAOK,IAAI,SAAAC,GAAmB,IAAhBL,EAAgBK,EAAhBL,GAAIC,EAAYI,EAAZJ,MAC9B,OAAOK,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAASC,QAAM,EAACC,OAAK,EAACX,GAAIA,EAAIY,IAAKZ,GAAKC,KAGjD,OAAOK,EAAAC,EAAAC,cAAA,WAAOL,6BCkBDU,cA3BX,SAAAA,IAAe,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACXC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACTC,QAAS,IAHFR,sHAaX,OACIR,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACfjB,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACbjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,kBACbjB,EAAAC,EAAAC,cAAA,sCApBOgB,aCmERC,qBAjEX,SAAAA,IAAe,IAAAX,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAQ,IACXX,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAU,GAAAL,KAAAH,QACKI,MAAQ,CACTK,MAAO,IAHAZ,oFAQXG,KAAKU,yDAGSC,GACdA,EAAEC,eAAeD,GACjBX,KAAKU,sDAEM,IAAAG,EAAAb,KACNc,UAAUC,OAIXC,IAAMC,IAAI,iDACTC,KAAK,SAAAC,GAEFC,aAAaC,QAAQ,QAASC,KAAKC,UAAUJ,EAASK,OACtDX,EAAKY,SAAS,CAAEhB,MAAOU,EAASK,SAGnCE,MAAM,SAAAC,GACHC,QAAQC,IAAIF,KAXhB3B,KAAKyB,SAAS,CAAEhB,MAAOa,KAAKQ,MAAMV,aAAaW,QAAQ,gDAgBnDC,GACR,OACI3C,EAAAC,EAAAC,cAAA,MAAII,IAAKqC,EAAKC,GAAI3B,UAAU,QACxBjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,aACXjB,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAIyC,EAAKE,OACb7C,EAAAC,EAAAC,cAAA,SAAIyC,EAAKG,gDAOhB,IAAAC,EAAApC,KACL,OACIX,EAAAC,EAAAC,cAAA,OAAKe,UAAU,QACXjB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,OAAKe,UAAU,WACXjB,EAAAC,EAAAC,cAAA,OAAKe,UAAU,kBACXjB,EAAAC,EAAAC,cAAA,UAEIS,KAAKI,MAAMK,MAAMtB,IAAM,SAAC6C,GACpB,OAAOI,EAAKC,YAAYL,gBAxDpCzB,cC8CL+B,mLApCX,OACIjD,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACAH,EAAAC,EAAAC,cAAA,OAAKe,UAAU,OACbjB,EAAAC,EAAAC,cAACgD,EAAD,MACAlD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAOC,OAAQ,SAAArD,GAAkB,IAAfsD,EAAetD,EAAfsD,SACRvF,EAAkBuF,EAAlBvF,SAAUwC,EAAQ+C,EAAR/C,IAElB,OACEN,EAAAC,EAAAC,cAACoD,EAAA,EAAD,CAAiBC,UAAW,MAC1BvD,EAAAC,EAAAC,cAACsD,EAAA,EAAD,CACElD,IAAKA,EACLmD,QAAQ,EACRC,QAAS,SAAC3F,EAAMC,GAAP,OAAmBH,EAAKC,EAAUC,EAAMC,IACjD2F,OAAQ,SAAC5F,EAAMC,GAAP,OJgBN,SAACD,GACnB,IAAME,EAAW,IAAIE,IAAS,CAAEC,QAAQ,IAExCH,EAASyB,GAAG3B,EAAM,IAAM,CAAEU,UAAW,EAAGG,KAAMC,IAAOC,UACrDb,EAASJ,OIpBkC+F,CAAK7F,IAChC8F,QAAS,CAACC,MAAO,IAAKF,KAAM,MAE5B5D,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAQE,SAAUA,GAChBrD,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAO9C,OAAK,EAACb,KAAK,IAAI+D,UAAWpC,IACjCnB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAOY,YAAU,EAACvE,KAAK,SAAS+D,UAAWpC,IAC3CnB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAO3D,KAAK,YAAY+D,UAAWhD,IACnCP,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAO9C,OAAK,EAACb,KAAMA,iBAAU+D,UAAWpC,IACxCnB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAOY,YAAU,EAACvE,KAAMA,sBAAe+D,UAAWpC,IAClDnB,EAAAC,EAAAC,cAACiD,EAAA,EAAD,CAAO3D,KAAMA,yBAAkB+D,UAAWhD,mBAxB5CW,aCAZ8C,EAAcC,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9B9C,UAAU+C,cACPC,SAASH,GACTzC,KAAK,SAAA6C,GACJnC,QAAQC,IAAI,iDAAkDkC,EAAaC,OAE3ED,EAAaE,cAAgB,WAC3B,IAAMC,EAAmBH,EAAaI,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB9D,QACfU,UAAU+C,cAAcQ,YAI1BzC,QAAQC,IACN,iHAKE+B,GAAUA,EAAOU,UACnBV,EAAOU,SAASP,KAMlBnC,QAAQC,IAAI,sCAGR+B,GAAUA,EAAOW,WACnBX,EAAOW,UAAUR,UAO5BrC,MAAM,SAAAC,GACLC,QAAQD,MAAM,4CAA6CA,KC5FjE6C,IAAS/B,OAAOpD,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe,SDgB1C,SAAkBf,GACvB,GAA6C,kBAAmB9C,UAAW,CAGzE,GADkB,IAAI8D,IAAIC,gBAAwBtB,OAAOb,SAASoC,MACpDC,SAAWxB,OAAOb,SAASqC,OAIvC,OAGFxB,OAAOyB,iBAAiB,OAAQ,WAC9B,IAAMrB,EAAK,GAAAsB,OAAMJ,gBAAN,sBAEPxB,GAkEV,SAAiCM,EAAOC,GAEtCsB,MAAMvB,GACHzC,KAAK,SAAAC,GAEJS,QAAQC,IACNV,GAEF,IAAMgE,EAAchE,EAASiE,QAAQnE,IAAI,gBAEnB,MAApBE,EAASkE,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5CxE,UAAU+C,cAAc0B,MAAMrE,KAAK,SAAA6C,GACjCA,EAAayB,aAAatE,KAAK,WAC7BqC,OAAOb,SAAS+C,aAKpB/B,EAAgBC,EAAOC,KAG1BlC,MAAM,WACLE,QAAQC,IACN,mEA1FA6D,CAAwB/B,EAAOC,GAI/B9C,UAAU+C,cAAc0B,MAAMrE,KAAK,WACjCU,QAAQC,IACN,gHAMJ6B,EAAgBC,EAAOC,MCvC/BC","file":"static/js/main.b8c09bda.chunk.js","sourcesContent":["import { TimelineMax as Timeline, Power1 } from 'gsap';\n\nconst getDefaultTimeline = (node, delay) => {\n  const timeline = new Timeline({ paused: true });\n  \n  if (node) {\n    const content = node.querySelector('.content');\n  const contentInner = node.querySelector('.content--inner');\n    timeline\n    .from(node, 0.3, { display: 'none', autoAlpha: 0, delay, ease: Power1.easeIn })\n    .from(content, 0.15, { autoAlpha: 0, y: 25, ease: Power1.easeInOut })\n    .from(contentInner, 0.15, { autoAlpha: 0, delay: 0.15, ease: Power1.easeIn });\n  }\n\n\n\n  return timeline;\n}\n\nconst getHomeTimeline = (node, delay) => {\n  const timeline = new Timeline({ paused: true });\n  const texts = node.querySelectorAll('h1 > div');\n\n  timeline\n    .from(node, 0, { display: 'none', autoAlpha: 0, delay })\n    .staggerFrom(texts, 0.375, { autoAlpha: 0, x: -25, ease: Power1.easeOut }, 0.125);\n\n  return timeline;\n}\n\nexport const play = (pathname, node, appears) => {\n  const delay = appears ? 0 : 0.5;\n  let timeline\n\n  if (pathname === '/')\n    timeline = getHomeTimeline(node, delay);\n  else\n    timeline = getDefaultTimeline(node, delay);\n    requestAnimationFrame(() => {\n      timeline.play()\n    });\n}\n\nexport const exit = (node) => {\n  const timeline = new Timeline({ paused: true });\n\n  timeline.to(node, 0.15, { autoAlpha: 0, ease: Power1.easeOut });\n  timeline.play();\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst path = \"/PWA-Projects\"\n\nconst routes = [\n  { to: path+'/', label: 'Repos' },\n  { to: path+'/imprints', label: 'Imprints' }\n];\n\nconst Nav = () => {\n  const links = routes.map(({ to, label }) => {\n    return <NavLink strict exact to={to} key={to}>{label}</NavLink>}\n  )\n\n  return <nav>{ links }</nav>;\n}\n\nexport default Nav\n","import React, { Component } from 'react';\nimport './index.css'\nimport axios from 'axios'\n\nclass Imprints extends Component {\n    // Adds a class constructor that assigns the initial state values:\n    constructor () {\n        super();\n        this.state = {\n            catelog: {}\n        };\n    }\n    // This is called when an instance of a component is being created and inserted into the DOM.\n    componentWillMount () {\n    }\n\n    \n    // The render method contains the JSX code which will be compiled to HTML.\n    render() {\n        return (\n            <div className=\"view\">\n            <h1>About</h1>\n            <div className=\"content\">\n              <div className=\"content--inner\">\n                <h2>Coming soon...</h2>\n              </div>\n            </div>\n          </div>\n    \n        )\n    }\n}\n\nexport default Imprints;\n","import React, { Component } from 'react';\nimport './index.css'\nimport axios from 'axios'\n\nclass Repos extends Component {\n    // Adds a class constructor that assigns the initial state values:\n    constructor () {\n        super();\n        this.state = {\n            repos: []\n        };\n    }\n    // This is called when an instance of a component is being created and inserted into the DOM.\n    componentWillMount () {\n        this.getMyReposWS()\n    }\n\n    refreshBtnClicked(e) {\n        e.preventDefault(e);\n        this.getMyReposWS()\n    }\n    getMyReposWS() {\n        if (!navigator.onLine) {\n            this.setState({ repos: JSON.parse(localStorage.getItem('repos'))});\n            return\n        }  else {\n            axios.get('https://api.github.com/users/vigneshuvi/repos')\n            .then(response => {\n                // We set the repos array in the state.\n                localStorage.setItem(\"repos\", JSON.stringify(response.data));\n                this.setState({ repos: response.data });\n            })\n            // Catch any error here\n            .catch(error => {\n                console.log(error)\n            })\n        }\n        \n    }\n    renderRepos(repo) {\n        return (\n            <li key={repo.id} className=\"card\">\n                <div className=\"container\">\n                    <h4><b>{repo.name}</b></h4> \n                    <p>{repo.description}</p> \n                </div>\n            </li>\n        );\n    }\n\n    // The render method contains the JSX code which will be compiled to HTML.\n    render() {\n        return (\n            <div className=\"view\">\n                <h1>Repositories</h1>\n                <div className=\"content\">\n                    <div className=\"content--inner\">\n                        <ul>\n                        {\n                            this.state.repos.map ( (repo) => {\n                                return this.renderRepos(repo)\n                            })\n                        }\n                        </ul>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Repos;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { Transition, TransitionGroup } from 'react-transition-group';\n\nimport { play, exit } from './timelines'\nimport Nav from './Nav'\nimport Imprints from './views/Imprints'\nimport Repos from './views/Repos'\n\nconst path = \"/PWA-Projects\"\n\nclass App extends Component {\n  render() {\n    return (\n        <BrowserRouter>\n        <div className=\"app\">\n          <Nav />\n          <Route render={({ location }) => {\n            const { pathname, key } = location;\n\n            return (\n              <TransitionGroup component={null}>\n                <Transition\n                  key={key}\n                  appear={true}\n                  onEnter={(node, appears) => play(pathname, node, appears)}\n                  onExit={(node, appears) => exit(node, appears)}\n                  timeout={{enter: 750, exit: 150}}\n                >\n                  <Switch location={location}>\n                    <Route exact path=\"/\" component={Repos}/>\n                    <Route startsWith path=\"/index\" component={Repos}/>\n                    <Route path=\"/imprints\" component={Imprints} />\n                    <Route exact path={path+\"/\"} component={Repos}/>\n                    <Route startsWith path={path+\"/index\"} component={Repos}/>\n                    <Route path={path+\"/imprints\"} component={Imprints} />\n                    \n                    \n                  </Switch>\n                </Transition>\n              </TransitionGroup>\n            )\n          }}/>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      console.log('Vigneshuvi. Registration successful, scope is:', registration.scope);\n\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      console.log(\n        response\n      );\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}